import numpy as np

tox_random300 = [
    4.946135792e-09    
,5.448062115e-09    
,5.66450797e-09    
,4.784110668e-09    
,4.531864641e-09    
,5.944045122e-09    
,5.605017257e-09    
,5.320248955e-09    
,5.53037132e-09    
,5.002948915e-09    
,4.735732922e-09    
,5.648081296e-09    
,5.872225977e-09    
,4.345650891e-09    
,4.790248759e-09    
,5.5073564e-09    
,5.67957054e-09    
,4.704773852e-09    
,5.244109575e-09    
,5.110481957e-09    
,5.408251889e-09    
,5.2309571e-09    
,4.67355467e-09    
,5.868969569e-09    
,4.715790698e-09    
,5.839810712e-09    
,5.292318109e-09    
,5.408111943e-09    
,5.153954963e-09    
,5.257079252e-09    
,5.879811022e-09    
,4.85130052e-09    
,4.380158704e-09    
,5.342887825e-09    
,5.571633605e-09    
,5.162505883e-09    
,5.40649486e-09    
,5.567758507e-09    
,5.374431514e-09    
,3.34012414e-09    
,6.107284277e-09    
,5.100753049e-09    
,4.995489805e-09    
,5.407474209e-09    
,5.091810185e-09    
,4.994133075e-09    
,5.138357413e-09    
,6.053237557e-09    
,5.647741555e-09    
,5.16745757e-09    
,3.782431828e-09    
,5.90838942e-09    
,5.691973832e-09    
,4.29780357e-09    
,5.329563873e-09    
,5.695007496e-09    
,4.886391027e-09    
,5.402145619e-09    
,6.664386728e-09    
,4.575604433e-09    
,4.874666225e-09    
,6.216088124e-09    
,5.230165344e-09    
,5.136804163e-09    
,5.073695991e-09    
,4.95180477e-09    
,5.064148358e-09    
,5.560161687e-09    
,6.28376344e-09    
,5.100862905e-09    
,4.944450576e-09    
,5.312948292e-09    
,5.447856534e-09    
,5.613129249e-09    
,5.415561184e-09    
,4.849604681e-09    
,3.958814787e-09    
,5.430900632e-09    
,5.607575485e-09    
,4.843994189e-09    
,5.027594053e-09    
,6.676727011e-09    
,5.356671055e-09    
,5.126171246e-09    
,4.584367768e-09    
,5.178199037e-09    
,6.18565355e-09    
,5.036353735e-09    
,5.533879498e-09    
,3.898794662e-09    
,5.208996053e-09    
,5.443111964e-09    
,5.853021721e-09    
,5.369380927e-09    
,4.363965674e-09    
,5.705418593e-09    
,6.048024203e-09    
,4.723033096e-09    
,4.969989073e-09    
,5.756394757e-09    
,5.323273735e-09    
,4.744184377e-09    
,4.352405824e-09    
,5.734678475e-09    
,4.36241462e-09    
,5.743287685e-09    
,5.50685975e-09    
,4.730190309e-09    
,5.183356348e-09    
,5.664270715e-09    
,6.020718368e-09    
,5.12001505e-09    
,5.143201557e-09    
,5.261780162e-09    
,5.821857463e-09    
,4.295182595e-09    
,4.867033189e-09    
,5.862643951e-09    
,5.216340194e-09    
,4.957179759e-09    
,5.46689293e-09    
,5.303431256e-09    
,4.779030529e-09    
,6.272152409e-09    
,5.705888127e-09    
,4.743011382e-09    
,5.291601808e-09    
,5.627749514e-09    
,5.995613123e-09    
,4.627360817e-09    
,5.185922139e-09    
,5.260440877e-09    
,5.67011224e-09    
,5.193207861e-09    
,4.620494755e-09    
,5.969017637e-09    
,4.619883319e-09    
,5.96428738e-09    
,5.419835145e-09    
,5.354549791e-09    
,4.906938156e-09    
,5.426975141e-09    
,5.932331977e-09    
,4.171148257e-09    
,5.389312123e-09    
,5.551779963e-09    
,5.99573677e-09    
,5.122793155e-09    
,4.671468843e-09    
,5.604846272e-09    
,5.392302915e-09    
,5.021777697e-09    
,5.029969996e-09    
,4.968790297e-09    
,6.931232549e-09    
,5.352230689e-09    
,5.835995592e-09    
,4.77904704e-09    
,5.14592539e-09    
,5.304497359e-09    
,5.747876643e-09    
,5.570876358e-09    
,4.661300004e-09    
,5.897535322e-09    
,5.358914724e-09    
,4.359576075e-09    
,5.413348399e-09    
,5.695916877e-09    
,4.813578134e-09    
,4.878057725e-09    
,5.93475459e-09    
,4.690025046e-09    
,5.138780352e-09    
,6.256139227e-09    
,5.108233121e-09    
,5.231126008e-09    
,4.199377138e-09    
,5.680577837e-09    
,5.812161304e-09    
,4.857876542e-09    
,5.333892105e-09    
,5.822322879e-09    
,5.709775355e-09    
,4.50190402e-09    
,6.277121577e-09    
,4.891984437e-09    
,4.658061145e-09    
,5.649420922e-09    
,5.245693136e-09    
,4.705378003e-09    
,4.845045331e-09    
,5.764146533e-09    
,4.975140572e-09    
,5.970833799e-09    
,4.964383097e-09    
,5.278080246e-09    
,5.046225697e-09    
,5.171028417e-09    
,6.279499072e-09    
,4.979273352e-09    
,5.553459429e-09    
,4.611935706e-09    
,5.531407849e-09    
,5.178390231e-09    
,5.534185583e-09    
,5.374080547e-09    
,4.296892884e-09    
,5.947693996e-09    
,5.279299941e-09    
,4.735870076e-09    
,4.930997104e-09    
,6.063223504e-09    
,6.188164792e-09    
,4.880302453e-09    
,4.763590613e-09    
,5.043342772e-09    
,5.294854075e-09    
,5.772050597e-09    
,5.635533824e-09    
,4.413256452e-09    
,4.251432167e-09    
,5.658905941e-09    
,5.78221439e-09    
,5.323902402e-09    
,4.893954371e-09    
,5.444623715e-09    
,5.981209273e-09    
,4.354991263e-09    
,4.277040882e-09    
,5.950861496e-09    
,5.449160949e-09    
,5.086243899e-09    
,5.609886203e-09    
,5.12580703e-09    
,4.540926035e-09    
,6.16960951e-09    
,6.150428329e-09    
,4.512060754e-09    
,5.131520798e-09    
,5.054942663e-09    
,5.668284674e-09    
,6.76447712e-09    
,4.995069042e-09    
,5.572469998e-09    
,5.291785604e-09    
,5.168961279e-09    
,4.787080551e-09    
,5.971584058e-09    
,4.81174306e-09    
,5.88748709e-09    
,5.491961377e-09    
,4.902001035e-09    
,5.162083357e-09    
,5.330184897e-09    
,5.481706122e-09    
,4.77985373e-09    
,4.40930157e-09    
,5.914881721e-09    
,5.548908438e-09    
,4.760028001e-09    
,5.056180374e-09    
,5.54850548e-09    
,5.80564978e-09    
,4.699601892e-09    
,5.980258556e-09    
,4.545548579e-09    
,4.946518812e-09    
,5.711428203e-09    
,5.463290146e-09    
,4.893164738e-09    
,4.70564147e-09    
,5.405023927e-09    
,5.30953901e-09    
,5.130715548e-09    
,4.543672454e-09    
,5.9587435e-09    
,5.764590256e-09    
,4.775049931e-09    
,5.303121603e-09    
,5.666787905e-09    
,5.227751065e-09    
,5.361773797e-09    
,5.930430997e-09    
,4.505288327e-09    
,4.53453933e-09    
,5.736160122e-09    
,5.149911647e-09    
,5.020715668e-09    
,5.350944482e-09    
,5.509906113e-09    
,5.265643283e-09    
,4.504678806e-09    
,4.537486532e-09    
,5.514433942e-09    
,5.677816893e-09    
,5.391601642e-09    
,5.236106957e-09    
,5.107601121e-09    
,5.246224325e-09    
,6.067042276e-09    
]


#print(tox_random300[299])

h0_random300 = [
    72335.71585    
,82374.2423    
,86703.1594    
,69095.21335    
,64050.29282    
,92293.90245    
,85513.34515    
,79817.97911    
,84020.42639    
,73471.97829    
,68127.65845    
,86374.62592    
,90857.51953    
,60326.01781    
,69217.97518    
,83560.128    
,87004.4108    
,67508.47703    
,78295.1915    
,75622.63914    
,81578.03778    
,78032.14201    
,66884.0934    
,90792.39137    
,67728.81397    
,90209.21424    
,79259.36219    
,81575.23886    
,76492.09925    
,78554.58504    
,91009.22044    
,70439.0104    
,61016.17409    
,80270.7565    
,84845.67211    
,76663.11767    
,81542.89721    
,84768.17015    
,80901.63028    
,40215.48279    
,95558.68553    
,75428.06098    
,73322.7961    
,81562.48417    
,75249.20371    
,73295.66149    
,76180.14827    
,94477.75114    
,86367.8311    
,76762.15139    
,49061.63655    
,91580.78841    
,87252.47664    
,59369.07141    
,80004.27746    
,87313.14993    
,71140.82054    
,81455.91238    
,106700.7346    
,64925.08865    
,70906.3245    
,97734.76248    
,78016.30688    
,76149.08325    
,74886.91983    
,72449.09539    
,74695.96717    
,84616.23374    
,99088.26881    
,75430.25811    
,72302.01152    
,79671.96584    
,82370.13067    
,85675.58498    
,81724.22367    
,70405.09362    
,52589.29574    
,82031.01264    
,85564.5097    
,70292.88379    
,73964.88106    
,106947.5402    
,80546.42111    
,75936.42491    
,65100.35535    
,76976.98075    
,97126.071    
,74140.07469    
,84090.58997    
,51388.89324    
,77592.92105    
,82275.23928    
,90473.43442    
,80800.61853    
,60692.31349    
,87521.37187    
,94373.48405    
,67873.66191    
,72812.78146    
,88540.89513    
,79878.4747    
,68296.68754    
,60461.11648    
,88106.5695    
,60661.29241    
,88278.75369    
,83550.19499    
,68016.80618    
,77080.12695    
,86698.4143    
,93827.36736    
,75813.301    
,76277.03113    
,78648.60324    
,89850.14925    
,59316.6519    
,70753.66377    
,90665.87902    
,77739.80389    
,72556.59518    
,82750.85859    
,79481.62512    
,68993.61058    
,98856.04819    
,87530.76253    
,68273.22765    
,79245.03617    
,85967.99028    
,93325.26246    
,65960.21634    
,77131.44279    
,78621.81755    
,86815.24481    
,77277.15721    
,65822.89509    
,92793.35275    
,65810.66639    
,92698.7476    
,81809.7029    
,80503.99583    
,71551.76311    
,81952.50282    
,92059.63954    
,56835.96513    
,81199.24247    
,84448.59925    
,93327.73539    
,75868.86309    
,66842.37687    
,85509.92543    
,81259.05831    
,73848.55394    
,74012.39991    
,72788.80594    
,112037.651    
,80457.61377    
,90132.91184    
,68993.94079    
,76331.5078    
,79502.94718    
,88370.53285    
,84830.52716    
,66639.00009    
,91363.70644    
,80591.29448    
,60604.5215    
,81679.96798    
,87331.33753    
,69684.56268    
,70974.1545    
,92108.0918    
,67213.50093    
,76188.60704    
,98535.78453    
,75577.66241    
,78035.52017    
,57400.54276    
,87024.55675    
,89656.22609    
,70570.53083    
,80090.84209    
,89859.45758    
,87608.5071    
,63451.0804    
,98955.43155    
,71252.68874    
,66574.2229    
,86401.41843    
,78326.86273    
,67520.56006    
,70313.90663    
,88695.93066    
,72915.81144    
,92829.67599    
,72700.66194    
,78974.60493    
,74337.51395    
,76833.56833    
,99002.98145    
,72998.46703    
,84482.18859    
,65651.71411    
,84041.15698    
,76980.80462    
,84096.71166    
,80894.61094    
,59350.85768    
,92366.87993    
,78998.99881    
,68130.40152    
,72032.94209    
,94677.47008    
,97176.29584    
,71019.04906    
,68684.81226    
,74279.85545    
,79310.0815    
,88854.01194    
,86123.67648    
,61678.12904    
,58441.64333    
,86591.11882    
,89057.2878    
,79891.04803    
,71292.08743    
,82305.47429    
,93037.18546    
,60512.82527    
,58953.81764    
,92430.22992    
,82396.21898    
,75137.87797    
,85610.72405    
,75929.1406    
,64231.52069    
,96805.1902    
,96421.56658    
,63654.21507    
,76043.41595    
,74511.85325    
,86778.69348    
,108702.5424    
,73314.38084    
,84862.39996    
,79248.71208    
,76792.22558    
,69154.61101    
,92844.68115    
,69647.86119    
,91162.74179    
,83252.22754    
,71453.0207    
,76654.66715    
,80016.69795    
,83047.12244    
,69010.0746    
,61599.03139    
,91710.63442    
,84391.16877    
,68613.56003    
,74536.60749    
,84383.10961    
,89525.99561    
,67405.03784    
,93018.17112    
,64323.97159    
,72343.37624    
,87641.56407    
,82678.80293    
,71276.29477    
,67525.8294    
,81513.47853    
,79603.78021    
,76027.31095    
,64286.44908    
,92587.87    
,88704.80512    
,68913.99863    
,79475.43206    
,86748.75811    
,77968.02131    
,80648.47594    
,92021.61993    
,63518.76655    
,64103.7866    
,88136.20245    
,76411.23294    
,73827.31336    
,80431.88963    
,83611.12225    
,78725.86567    
,63506.57612    
,64162.73065    
,83701.67884    
,86969.33785    
,81245.03285    
,78135.13914    
,75565.02242    
,78337.48651    
,94753.84552  
]


class variation:
    def __init__(self,vector,name,mean,std,size):
        self.name = name
        self.mean = mean
        self.std = std
        self.size = size
        self.data = vector
        self.relmean = np.mean(self.data)
        self.relstd = np.std(self.data)
        self.relmedian = np.median(self.data)
'''    def __init__(self,fileName,name,size):
        f = open(fileName,'r')
        self.data=[]
        for line in f:
            self.data += [float(line)]
        self.name = name 
        self.size = size
        self.relmean = np.mean(self.data)
        self.relstd = np.std(self.data)
        self.relmedian = np.median(self.data)
'''
def corrcoef(x,y):
    return np.corrcoef(x.data,y.data)


def write2file(data,fileName):
    f = open(fileName,'w')
    for d in data:
        f.write(str(d) + "\n")
    f.close()

def column_stack(row1,row2):
    '''
    ##使成为二维数组
    '''
    return np.column_stack((row1.data, row2.data))


